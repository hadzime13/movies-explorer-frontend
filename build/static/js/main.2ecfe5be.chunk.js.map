{"version":3,"sources":["components/PageLink/PageLink.js","images/test.svg","contexts/CurrentUserContext.js","components/Navigation/Navigation.js","images/logo.svg","components/Header/Header.js","images/landing-logo.svg","components/Promo/Promo.js","components/AboutProject/AboutProject.js","components/Techs/Techs.js","components/WebLink/Weblink.js","images/vitalyan.jpg","components/AboutMe/AboutMe.js","components/Portfolio/Portfolio.js","components/Footer/Footer.js","components/Main/Main.js","utils/useForm.js","components/Button/Button.js","utils/constants.js","components/SearchForm/SearchForm.js","images/save3.svg","components/MoviesCard/MoviesCard.js","images/iconmonstr-picture-thin.svg","config/index.js","components/MoviesCardList/MoviesCardList.js","components/Preloader/Preloader.js","components/Message/Message.js","components/Movies/Movies.js","components/SavedMovies/SavedMovies.js","components/Form/Form.js","utils/useFormWithValidation.js","components/Profile/Profile.js","components/ProfilePage/ProfilePage.js","components/Register/Register.js","components/RegisterPage/RegisterPage.js","components/Login/Login.js","components/LoginPage/LoginPage.js","components/NotFound/NotFound.js","components/ProtectedRoute/ProtectedRoute.js","utils/mainApi.js","utils/useWindowSize.js","utils/MoviesApi.js","components/App/App.js","reportWebVitals.js","index.js"],"names":["PageLink","React","memo","link","linkText","linkImage","mod","to","className","activeClassName","src","alt","CurrentUserContext","createContext","Navigation","isLoggedIn","useContext","useState","isOpenMenu","setMenuState","accountImage","type","aria-label","onClick","Header","loggedIn","isMenuOn","logo","Promo","href","landingLogo","AboutProject","id","Techs","WebLink","linkMod","linkImageName","target","rel","AboutMe","Photo","Portfolio","Footer","Main","useForm","filmForm","data","setData","handleChange","evt","value","name","Button","buttonText","buttonMod","buttonImage","disabled","registerFormInputs","email","password","loginFormInputs","profileFormInputs","searchInputs","film","SearchForm","searchMovies","shortMoviesSwitch","isShortMovies","filterSavedMovies","userMovies","onButtonClick","preventDefault","toLowerCase","action","method","onSubmit","placeholder","onChange","required","length","MoviesCard","movieImage","movieName","movieLength","isSaved","isAtSavedMovies","handleSaveMovie","movie","handleDeleteMovie","movieTrailer","handleDislikeClick","stopPropagation","_id","console","log","window","open","SavedImg","notFoundMessage","imageURL","MoviesCardList","movies","savedMovies","savedMoviesPage","isButtonOn","getMovies","map","image","NoImage","nameRU","Math","floor","duration","trailer","movieId","url","trailerLink","find","element","Preloader","Message","messageText","Movies","isPreloaderOn","errorText","filteredMovies","loadCards","shortMoviesOff","useEffect","SavedMovies","Form","title","children","formText","redirectText","onLinkClick","useFormWithValidation","formData","initialData","currentUser","errors","setErrors","isValid","setIsValid","isDifferent","setIsDifferent","resetForm","useCallback","newIsValid","validity","patternMismatch","setCustomValidity","validationMessage","closest","checkValidity","Profile","handleEditProfile","isEditProfile","editProfile","editProfileError","handleLogout","profileFormData","formDiffers","e","htmlFor","minLength","maxLength","pattern","ProfilePage","Register","handleRegister","registerError","RegisterPage","Login","handleLogin","loginError","LoginPage","NotFound","goBack","ProtectedRoute","Component","component","props","mainApi","register","fetch","_url","headers","body","JSON","stringify","then","_handleResponse","authorize","getContent","token","Authorization","getAllMovies","_headers","this","res","json","cardId","isLiked","getBreakPoint","windowWidth","useWindowSize","timer","isClient","innerWidth","undefined","windowSize","setWindowSize","resizeThrottler","setTimeout","changeWindowSize","addEventListener","removeEventListener","handleResponse","App","saveMovieError","searchError","errorMessages","setErrorMessages","userData","setUserData","setLoggedIn","permissionsChecked","setPermissionsChecked","setEditProfile","preloaderOn","setPreloaderOn","setFilterMovies","foundShortMovies","setFoundShortMovies","setIsShortMovies","foundMovies","setFoundMovies","setSavedMovies","savedShortMovies","setSavedShortMovies","savedFilteredMovies","setSavedFilteredMovies","numberOfMovies","setNumberOfMovies","setButtonState","history","useHistory","width","message","validation","Promise","reject","error","localStorage","setItem","setToken","getUser","push","catch","deleteMovie","err","filterMovies","searchText","filter","nameRu","nameEn","nameEN","includes","checkButton","slice","renderCardsOnFirstLoad","number","getItem","parse","result","sliceNumber","jwt","finally","tokenCheck","Provider","exact","path","savedMovie","country","director","year","description","thumbnail","formats","addMovie","fullMoviesList","addCards","showMovies","updateUser","removeItem","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2ecfe5be.chunk.js","sourcesContent":["import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport './PageLink.css'\r\n\r\nconst PageLink = React.memo(({ link = '#', linkText, linkImage, mod }) => {\r\n\r\n  return (\r\n    <NavLink to={link} className={`pagelink${mod ? ` ${mod}` : ''}`} activeClassName=\"pagelink_active\">\r\n      <p className='pagelink__text'>{linkText}</p> {linkImage && <img src={linkImage} alt={linkText} className=\"pagelink__image\"></img>}\r\n    </NavLink>\r\n  );\r\n});\r\n\r\nexport default PageLink;","export default __webpack_public_path__ + \"static/media/test.13c06232.svg\";","import React from 'react';\r\nconst CurrentUserContext = React.createContext();\r\n\r\nexport default CurrentUserContext;","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PageLink from '../PageLink/PageLink';\r\nimport './Navigation.css';\r\nimport accountImage from '../../images/test.svg';\r\nimport CurrentUserContext from '../../contexts/CurrentUserContext';\r\n\r\nconst Navigation = ({ isLoggedIn = false }) => {\r\n  const currentUser = React.useContext(CurrentUserContext);\r\n  const [isOpenMenu, setMenuState] = useState(false);\r\n  const onClick = () => {\r\n    isOpenMenu ? setMenuState(false) : setMenuState(true);\r\n  }\r\n  return (\r\n    <>\r\n      <nav className={`navigation__menu\r\n      ${isLoggedIn ? '' : ' navigation__menu_not-logged-in'}\r\n      ${isOpenMenu ? 'navigation__menu_burger' : ''}`} >\r\n        {isLoggedIn ? (\r\n          <>\r\n            {isOpenMenu && (<Link to=\"/\" className=\"navigation__link\">Главная</Link>)}\r\n            <PageLink linkText=\"Фильмы\" link=\"/movies\" />\r\n            <PageLink linkText=\"Сохраненные фильмы\" link=\"/saved-movies\" />\r\n            <PageLink linkText=\"Аккаунт\" link=\"/profile\" linkImage={accountImage} mod=\"pagelink_type_account\" />\r\n          </>\r\n        ) : (\r\n          <>\r\n            <PageLink linkText=\"Регистрация\" link=\"/signup\" />\r\n            <PageLink linkText=\"Войти\" link=\"/signin\" mod=\"pagelink_type_login\" />\r\n          </>\r\n        )}\r\n      </nav>\r\n      <button\r\n        type=\"button\"\r\n        aria-label=\"Меню\"\r\n        className={`navigation__button${isOpenMenu ? ' navigation__button_open-menu' : ''}`}\r\n        onClick={onClick}>\r\n        <span className=\"navigation__span\" />\r\n      </button>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Navigation;\r\n","export default __webpack_public_path__ + \"static/media/logo.850e5b6d.svg\";","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Navigation from '../Navigation/Navigation';\r\nimport './Header.css';\r\nimport logo from '../../images/logo.svg';\r\nimport CurrentUserContext from '../../contexts/CurrentUserContext';\r\n\r\n\r\nconst Header = React.memo(({ mod, loggedIn = true, isMenuOn = true }) => {\r\n  const currentUser = React.useContext(CurrentUserContext);\r\n  return (\r\n    <header className={`header__container${mod ? ` ${mod}` : ''}`}>\r\n      <Link to=\"/\" className=\"header__link\">\r\n        <img src={logo} alt=\"Лого\" className=\"header__logo\" />\r\n      </Link>\r\n      {isMenuOn && (<Navigation isLoggedIn={loggedIn} />)}\r\n    </header>\r\n  );\r\n});\r\n\r\nexport default Header;","export default __webpack_public_path__ + \"static/media/landing-logo.8c9cca64.svg\";","import React from 'react';\r\nimport './Promo.css';\r\nimport landingLogo from '../../images/landing-logo.svg';\r\n\r\nconst Promo = React.memo(() => {\r\n  return (\r\n    <section className='promo__container'>\r\n      <h1 className=\"promo__title\">Учебный проект студента факультета Веб-разработки.</h1>\r\n      <p className=\"promo__description\">Листайте ниже, чтобы узнать больше про этот проект и его создателя.</p>\r\n      <a href=\"#project\" className=\"promo__link\">\r\n        Узнать больше\r\n      </a>\r\n      <img src={landingLogo} alt=\"Учебный проект\" className=\"promo__image\" />\r\n    </section>\r\n  );\r\n});\r\n\r\nexport default Promo;","import React from 'react';\r\nimport './AboutProject.css';\r\nconst AboutProject = React.memo(() => {\r\n  return (\r\n    <section className='about-project__container' id=\"project\">\r\n      <h2 className=\"about-project__title\">О проекте</h2>\r\n      <h3 className=\"about-project__subtitle about-project__text_grid_subtitle1\">Дипломный проект включал 5 этапов</h3>\r\n      <h3 className=\"about-project__subtitle about-project__text_grid_subtitle2\">На выполнение диплома ушло 5 недель</h3>\r\n      <p className=\"about-project__text about-project__text_type_description about-project__text_grid_text1\">\r\n        Составление плана, работу над бэкендом, вёрстку, добавление функциональности и финальные доработки.</p>\r\n      <p className=\"about-project__text about-project__text_type_description about-project__text_grid_text2\">\r\n        У каждого этапа был мягкий и жёсткий дедлайн, которые нужно было соблюдать, чтобы успешно защититься.</p>\r\n      <p className=\"about-project__text about-project__text_type_deadline-tech about-project__text_grid_text3\">1 неделя</p>\r\n      <p className=\"about-project__text about-project__text_type_deadline-tech about-project__text_grid_text4\">4 недели</p>\r\n      <p className=\"about-project__text about-project__text_type_deadline-tech about-project__text_grid_text5\">Back-end</p>\r\n      <p className=\"about-project__text about-project__text_type_deadline-tech about-project__text_grid_text6\">Front-end</p>\r\n    </section>\r\n  )\r\n});\r\n\r\nexport default AboutProject;","import React from 'react';\r\nimport './Techs.css';\r\nconst Techs = React.memo(() => {\r\n  return (\r\n    <section className='techs__container'>\r\n      <h2 className=\"techs__title\">Технологии</h2>\r\n      <h3 className=\"techs__subtitle\">7 технологий</h3>\r\n      <p className=\"techs__text\">\r\n      На курсе веб-разработки мы освоили технологии, которые применили в дипломном проекте.</p>\r\n      <ul className=\"techs__list\">\r\n        <li className=\"techs__list-item\">HTML</li>\r\n        <li className=\"techs__list-item\">CSS</li>\r\n        <li className=\"techs__list-item\">JS</li>\r\n        <li className=\"techs__list-item\">React</li>\r\n        <li className=\"techs__list-item\">Git</li>\r\n        <li className=\"techs__list-item\">Express.js</li>\r\n        <li className=\"techs__list-item\">mongoDB</li>\r\n      </ul>\r\n    </section>\r\n  )\r\n});\r\n\r\nexport default Techs;","import React from 'react';\r\nimport './Weblink.css'\r\n\r\nconst WebLink = React.memo(({ link = '#', linkText, linkMod, linkImage, linkImageName }) => {\r\n\r\n  return (\r\n    <a href={link} className={`weblink${linkMod ? ` ${linkMod}` : ''}`} target=\"_blank\" rel=\"noreferrer\">\r\n      {linkText && linkText} {linkImage && <img src={linkImage} alt={linkImageName} className=\"weblink__image\"/>}\r\n    </a>\r\n  );\r\n});\r\n\r\nexport default WebLink;","export default __webpack_public_path__ + \"static/media/vitalyan.020571aa.jpg\";","import React from 'react';\r\nimport WebLink from '../WebLink/Weblink';\r\nimport './AboutMe.css';\r\nimport Photo from '../../images/vitalyan.jpg'\r\n\r\nconst AboutMe = React.memo(() => {\r\n  return (\r\n    <section className='about-me__container'>\r\n      <h2 className=\"about-me__title\">Студент</h2>\r\n      <h3 className=\"about-me__subtitle\">Виталий</h3>\r\n      <img src={Photo} alt=\"Мое фото\" className=\"about-me__image\" />\r\n      <h3 className=\"about-me__info\">Фронтенд-разработчик, 37 лет</h3>\r\n      <p className=\"about-me__text\">\r\n        Я родился и живу в Саратове, закончил факультет экономики СГУ. У меня есть жена\r\n        и дочь. Я люблю слушать музыку, а ещё увлекаюсь бегом. Недавно начал кодить. С 2015 года\r\n        работал в компании «СКБ Контур». После того, как прошёл курс по веб-разработке,\r\n        начал заниматься фриланс-заказами и ушёл с постоянной работы.\r\n      </p>\r\n      <ul className=\"about-me__links\">\r\n        <li className=\"about-me__link\"><WebLink\r\n          linkText='GitHub'\r\n          link='https://github.com/hadzime13' /></li>\r\n        <li className=\"about-me__link\"><WebLink\r\n          linkText='GitHub'\r\n          link='https://github.com/hadzime13' /></li>\r\n      </ul>\r\n\r\n    </section>\r\n  )\r\n});\r\n\r\nexport default AboutMe;","import React from 'react';\r\nimport WebLink from '../WebLink/Weblink';\r\nimport './Portfolio.css';\r\n\r\nconst Portfolio = React.memo(() => {\r\n  return (\r\n    <section className='portfolio__container'>\r\n      <h2 className=\"portfolio__title\">Портфолио</h2>\r\n      <ul className=\"portfolio__links\">\r\n        <li className=\"portfolio__link\">\r\n          <p className=\"portfolio__link-text\">Статичный сайт</p>\r\n          <WebLink\r\n          link='https://github.com/hadzime13/how-to-learn'\r\n          linkText='↗'\r\n          linkMod='weblink__type_portfolio'\r\n          /></li>\r\n        <li className=\"portfolio__link\">\r\n          <p className=\"portfolio__link-text\">Адаптивный сайт</p>\r\n          <WebLink\r\n          link='https://github.com/hadzime13/russian-travel'\r\n          linkText='↗'\r\n          linkMod='weblink__type_portfolio' /></li>\r\n        <li className=\"portfolio__link\">\r\n          <p className=\"portfolio__link-text\">Одностраничное приложение</p>\r\n          <WebLink\r\n          link='https://github.com/hadzime13/react-mesto-api-full'\r\n          linkText='↗'\r\n          linkMod='weblink__type_portfolio' /></li>\r\n      </ul>\r\n      \r\n    </section>\r\n  )\r\n});\r\n\r\nexport default Portfolio;","import React from 'react';\r\nimport './Footer.css';\r\nimport Weblink from '../WebLink/Weblink';\r\n\r\nconst Footer = React.memo(() => {\r\n  return (\r\n    <footer className='footer__container'>\r\n      <h2 className=\"footer__title\">Учебный проект Яндекс.Практикум х BeatFilm.</h2>\r\n      <p className=\"footer__text\">\r\n        © 2021</p>\r\n      <ul className=\"footer__links-list\">\r\n        <li className=\"footer__links-item\">\r\n          <Weblink\r\n            link='https://praktikum.yandex.ru/'\r\n            linkText='Яндекс.Практикум'\r\n            linkMod='weblink__type_footer' />\r\n        </li>\r\n        <li className=\"footer__links-item\">\r\n          <Weblink\r\n            link='https://praktikum.yandex.ru/'\r\n            linkText='Яндекс.Практикум'\r\n            linkMod='weblink__type_footer' />\r\n        </li>\r\n        <li className=\"footer__links-item\">\r\n          <Weblink\r\n            link='https://praktikum.yandex.ru'\r\n            linkText='Яндекс.Практикум'\r\n            linkMod='weblink__type_footer' />\r\n        </li>\r\n      </ul>\r\n    </footer>\r\n  )\r\n});\r\n\r\nexport default Footer;","import React from 'react';\r\nimport Header from '../Header/Header';\r\nimport Promo from '../Promo/Promo';\r\nimport AboutProject from '../AboutProject/AboutProject';\r\nimport Techs from '../Techs/Techs';\r\nimport AboutMe from '../AboutMe/AboutMe';\r\nimport Portfolio from '../Portfolio/Portfolio';\r\nimport Footer from '../Footer/Footer';\r\nimport CurrentUserContext from '../../contexts/CurrentUserContext';\r\n\r\n\r\n\r\nconst Main = React.memo(({ loggedIn }) => {\r\n  const currentUser = React.useContext(CurrentUserContext);\r\n  return (\r\n    <>\r\n      <Header\r\n        mod='header__container_type_main' loggedIn={loggedIn} />\r\n      <Promo />\r\n      <AboutProject />\r\n      <Techs />\r\n      <AboutMe />\r\n      <Portfolio />\r\n      <Footer />\r\n    </>\r\n  );\r\n\r\n});\r\n\r\nexport default Main;","import React from \"react\";\r\n\r\nconst useForm = (filmForm) => {\r\n  const [data, setData] = React.useState(filmForm);\r\n\r\n  const handleChange = (evt) => {\r\n    const target = evt.target;\r\n    const value = target.value;\r\n    const name = target.name;\r\n    setData({ ...data, [name]: value });\r\n  };\r\n\r\n  return { data, handleChange, setData };\r\n}\r\n\r\nexport default useForm;\r\n","import React from 'react';\r\nimport './Button.css';\r\n\r\nconst Button = React.memo(({ buttonText, onClick, buttonMod, buttonImage, disabled }) => {\r\n  \r\n  return (\r\n    <button\r\n      type=\"button\"\r\n      aria-label={buttonText}\r\n      className={`button${buttonMod ? ` ${buttonMod}` : ''}`}\r\n      onClick={onClick}\r\n      disabled={disabled}\r\n    >\r\n      {buttonText} {buttonImage && <img src={buttonImage} alt={buttonText} className=\"button__image\"></img>}\r\n    </button>\r\n  );\r\n});\r\n\r\nexport default Button;","const registerFormInputs = {\r\n  name: '',\r\n  email: '',\r\n  password: '',\r\n}\r\n\r\nconst loginFormInputs = {\r\n  email: '',\r\n  password: '',\r\n}\r\n\r\nconst profileFormInputs = {\r\n  name: '',\r\n  email: '',\r\n}\r\nconst searchInputs = {\r\n  film: '',\r\n}\r\n\r\nexport { registerFormInputs, searchInputs, loginFormInputs, profileFormInputs }","import React from 'react';\r\nimport useForm from '../../utils/useForm';\r\nimport Button from '../Button/Button';\r\nimport { searchInputs } from '../../utils/constants'\r\nimport './SearchForm.css';\r\n\r\nconst SearchForm = ({ searchMovies, shortMoviesSwitch, isShortMovies, filterSavedMovies, userMovies }) => {\r\n\r\n  const { handleChange, data } = useForm(searchInputs);\r\n\r\n\r\n  // Сабмит формы\r\n  const onButtonClick = (evt) => {\r\n    evt.preventDefault();\r\n    searchMovies ? searchMovies(data.film.toLowerCase()) : filterSavedMovies(userMovies, data.film.toLowerCase());\r\n  }\r\n\r\n  return (\r\n    <form action=\"#\" className=\"search-form__container\" method='POST' onSubmit={onButtonClick}>\r\n      <fieldset className=\"search-form__fieldset\">\r\n        <input\r\n          className=\"search-form__input\"\r\n          id=\"film\"\r\n          name=\"film\"\r\n          type=\"text\"\r\n          placeholder=\"Фильм\"\r\n          value={data.film || ''}\r\n          onChange={handleChange}\r\n          required\r\n        />\r\n        <Button\r\n          buttonText=\"Поиск\"\r\n          buttonMod=\"button_type_search\"\r\n          disabled={data.film.length < 1}\r\n          onClick={onButtonClick} />\r\n      </fieldset>\r\n      <button type=\"button\"\r\n        className={`search-form__switch${isShortMovies ? ' search-form__switch_on' : ''}`}\r\n        onClick={shortMoviesSwitch}>\r\n        <span className=\"search-form__switch-text\">Короткометражки</span>\r\n      </button>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default SearchForm;","export default __webpack_public_path__ + \"static/media/save3.ce50d254.svg\";","import React from 'react';\r\nimport SavedImg from '../../images/save3.svg';\r\nimport './MoviesCard.css';\r\n\r\nconst MoviesCard = ({ movieImage, movieName, movieLength,\r\n  isSaved, isAtSavedMovies, handleSaveMovie,\r\n  movie, handleDeleteMovie, movieTrailer }) => {\r\n\r\n  const handleLikeClick = (evt) => {\r\n    evt.stopPropagation();\r\n    evt.preventDefault();\r\n    handleSaveMovie(movie);\r\n  }\r\n\r\n  const handleDislikeClick = (evt) => {\r\n    evt.stopPropagation();\r\n    evt.preventDefault();\r\n    const id = !isAtSavedMovies ? isSaved._id : movie._id;\r\n    console.log(movie);\r\n    handleDeleteMovie(id);\r\n  }\r\n\r\n  const openTrailer = () => {\r\n    window.open(movieTrailer, '_blank')\r\n  }\r\n\r\n\r\n  return (\r\n    <li className=\"movies-card__element\" onClick={openTrailer}>\r\n      <img src={movieImage} alt={movieName} className=\"movies-card__image\" />\r\n      { isSaved ? (<img src={SavedImg} alt=\"Сохранен\" className=\"movies-card__saved-image\" onClick={handleDislikeClick} />)\r\n        : <button\r\n          type=\"button\"\r\n          className={`movies-card__button${isAtSavedMovies ? \" movies-card__button_delete\" : \"\"}`}\r\n          onClick={!isAtSavedMovies ? handleLikeClick : handleDislikeClick}>\r\n          {isAtSavedMovies ? 'X' : 'Сохранить'}\r\n        </button>}\r\n      <h3 className=\"movies-card__name\">{movieName}</h3>\r\n      <span className=\"movies-card__length\">{movieLength}</span>\r\n    </li>\r\n  )\r\n}\r\nexport default MoviesCard;","export default __webpack_public_path__ + \"static/media/iconmonstr-picture-thin.f8de5894.svg\";","\r\nconst notFoundMessage = 'Ничего не найдено';\r\nconst serverErrorMessage = `Во время запроса произошла ошибка. \r\nВозможно, проблема с соединением или сервер недоступен. Подождите немного и попробуйте ещё раз`;\r\nconst inputEmailErrorMessage = 'Введите корректный email';\r\nconst inputNameErrorMessage = 'Имя может содержать только буквы,пробел или дефис. От 2 до 30 символов';\r\n\r\nconst API_URL = 'https://api.nomoreparties.co/beatfilm-movies';\r\nconst MAIN_API_URL = 'https://api.hadzime.xyz';\r\nconst imageURL = 'https://api.nomoreparties.co';\r\n\r\nexport {\r\n  notFoundMessage,\r\n  serverErrorMessage,\r\n  inputEmailErrorMessage,\r\n  inputNameErrorMessage,\r\n  API_URL,\r\n  imageURL,\r\n  MAIN_API_URL\r\n};","import React from 'react';\r\nimport MoviesCard from '../MoviesCard/MoviesCard';\r\nimport Button from '../Button/Button';\r\nimport './MoviesCardList.css';\r\nimport NoImage from '../../images/iconmonstr-picture-thin.svg'\r\nimport { moviesList, moviesImages, imageURL } from '../../config/index';\r\n\r\nconst MoviesCardList = ({ movies, savedMovies, savedMoviesPage, mod, onButtonClick, isButtonOn, handleSaveMovie, handleDeleteMovie, getMovies }) => {\r\n\r\n  return (\r\n    <>\r\n      <section className={`movies-cardlist__container${mod ? ` ${mod}` : ''}`}>\r\n        {savedMoviesPage ?\r\n          <ul className=\"movies-cardlist__list\">\r\n            {savedMovies.map((movie) =>\r\n            (<MoviesCard\r\n              movie={movie}\r\n              key={movie.movieId}\r\n              movieImage={movie.image ? movie.image : NoImage}\r\n              movieName={movie.nameRU}\r\n              movieLength={`${Math.floor(movie.duration / 60)}ч${movie.duration % 60}м`}\r\n              movieTrailer={movie.trailer || 'https://www.youtube.com/'}\r\n              isAtSavedMovies={true}\r\n              handleDeleteMovie={handleDeleteMovie}\r\n              getMovies={getMovies}\r\n            />)\r\n            )}\r\n          </ul>\r\n          : <>\r\n            <ul className=\"movies-cardlist__list\">\r\n              {movies.map((movie) =>\r\n              (<MoviesCard\r\n                movie={movie}\r\n                key={movie.id}\r\n                movieImage={movie.image ? `${imageURL}${movie.image.url}` : NoImage}\r\n                movieName={movie.nameRU}\r\n                movieLength={`${Math.floor(movie.duration / 60)}ч${movie.duration % 60}м`}\r\n                movieTrailer={movie.trailerLink || 'https://www.youtube.com/'}\r\n                handleSaveMovie={handleSaveMovie}\r\n                handleDeleteMovie={handleDeleteMovie}\r\n                isSaved={savedMovies.find((element) => element.movieId === movie.id)}\r\n                getMovies={getMovies} />)\r\n              )}\r\n            </ul>\r\n            {isButtonOn && (<Button buttonText='Еще' buttonMod='button_type_movies' onClick={onButtonClick} />)}\r\n          </>\r\n        }\r\n      </section>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default MoviesCardList;","import React from 'react'\r\nimport './Preloader.css'\r\n\r\nconst Preloader = () => {\r\n    return (\r\n        <div className=\"preloader\">\r\n            <div className=\"preloader__container\">\r\n                <span className=\"preloader__round\"></span>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Preloader\r\n","import React from 'react';\r\nimport './Message.css'\r\n\r\nconst Message = ({ messageText }) => {\r\n\r\n  return (\r\n    <p className=\"message__text\">{messageText}</p>\r\n  )\r\n\r\n}\r\n\r\nexport default Message;","import React from 'react';\r\nimport Header from '../Header/Header';\r\nimport SearchForm from '../SearchForm/SearchForm';\r\nimport MoviesCardList from '../MoviesCardList/MoviesCardList';\r\nimport Footer from '../Footer/Footer';\r\nimport Preloader from '../Preloader/Preloader'\r\nimport Message from '../Message/Message';\r\n\r\nconst Movies = ({\r\n  handleSaveMovie, handleDeleteMovie, searchMovies,\r\n  isPreloaderOn, errorText, filteredMovies,\r\n  loadCards, isButtonOn, getMovies, savedMovies,\r\n  shortMoviesSwitch, isShortMovies, shortMoviesOff }) => {\r\n\r\n  // При загрузке страницы\r\n  React.useEffect(() => {\r\n\r\n    getMovies();\r\n    return () => {\r\n      shortMoviesOff();\r\n    }\r\n  }, [])\r\n\r\n\r\n  return (\r\n    <>\r\n      <Header isLoggedIn={true} />\r\n      <SearchForm searchMovies={searchMovies} shortMoviesSwitch={shortMoviesSwitch} isShortMovies={isShortMovies} />\r\n      {isPreloaderOn && <Preloader />}\r\n      {errorText && <Message messageText={errorText} />}\r\n      {!isPreloaderOn && !errorText\r\n        && (<MoviesCardList\r\n          movies={filteredMovies}\r\n          savedMovies={savedMovies}\r\n          onButtonClick={loadCards}\r\n          isButtonOn={isButtonOn}\r\n          handleSaveMovie={handleSaveMovie}\r\n          handleDeleteMovie={handleDeleteMovie}\r\n          getMovies={getMovies} />)}\r\n      <Footer />\r\n    </>\r\n  );\r\n\r\n};\r\n\r\nexport default Movies;","import React from 'react';\r\nimport Header from '../Header/Header';\r\nimport SearchForm from '../SearchForm/SearchForm';\r\nimport Message from '../Message/Message';\r\nimport MoviesCardList from '../MoviesCardList/MoviesCardList';\r\nimport Footer from '../Footer/Footer';\r\n\r\n\r\nconst SavedMovies = ({ savedMovies, getMovies, shortMoviesSwitch,\r\n  isShortMovies, shortMoviesOff, handleDeleteMovie, errorText, filterSavedMovies, userMovies }) => {\r\n  React.useEffect(() => {\r\n    getMovies();\r\n    return () => {\r\n      shortMoviesOff();\r\n    }\r\n  }, [])\r\n\r\n  return (\r\n    <>\r\n      <Header />\r\n      <SearchForm\r\n        userMovies={userMovies}\r\n        filterSavedMovies={filterSavedMovies}\r\n        shortMoviesSwitch={shortMoviesSwitch}\r\n        isShortMovies={isShortMovies} />\r\n      {errorText && <Message messageText={errorText} />}\r\n      <MoviesCardList\r\n        savedMoviesPage={true}\r\n        savedMovies={savedMovies}\r\n        handleDeleteMovie={handleDeleteMovie}\r\n        mod='movies-cardlist__container_type_saved'\r\n      />\r\n      <Footer />\r\n    </>\r\n  );\r\n\r\n};\r\n\r\nexport default SavedMovies;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './Form.css';\r\n\r\n\r\nconst Form = ({ title, buttonText, onSubmit, children, formText, link, redirectText, mod, disabled, onLinkClick }) => {\r\n  return (\r\n    <form\r\n      action=\"#\"\r\n      method=\"POST\"\r\n      onSubmit={onSubmit}\r\n      className=\"form__container\"\r\n    >\r\n      <h2 className=\"form__title\">{title}</h2>\r\n      <fieldset className=\"form__fieldset\">\r\n        {children}\r\n        <button type=\"submit\" className={`form__button${mod ? ` ${mod}` : ''}`} disabled={disabled} onClick={onSubmit}>\r\n          {buttonText}\r\n        </button>\r\n        <p className=\"form__text\">\r\n          {formText}\r\n          <Link to={link} className=\"form__link-redirect\" onClick={onLinkClick}>\r\n            {redirectText}\r\n          </Link>\r\n        </p>\r\n\r\n      </fieldset>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Form;","import React, { useCallback, useState } from 'react';\r\nimport CurrentUserContext from '../contexts/CurrentUserContext';\r\nimport { inputEmailErrorMessage, inputNameErrorMessage } from '../config/index';\r\n\r\nconst useFormWithValidation = (formData, initialData) => {\r\n  const currentUser = React.useContext(CurrentUserContext);\r\n  const [data, setData] = useState(initialData ? initialData : formData);\r\n  const [errors, setErrors] = useState(formData);\r\n  const [isValid, setIsValid] = useState(false);\r\n  const [isDifferent, setIsDifferent] = useState({\r\n    name: false,\r\n    email: false,\r\n  });\r\n\r\n  const handleChange = (evt) => {\r\n    const target = evt.target;\r\n    const value = target.value;\r\n    const name = target.name;\r\n    if (evt.target.validity.patternMismatch) {\r\n      name === 'email' && target.setCustomValidity(inputEmailErrorMessage);\r\n      name === 'name' && target.setCustomValidity(inputNameErrorMessage);\r\n    }\r\n    else {\r\n      evt.target.setCustomValidity('');\r\n    }\r\n    setIsDifferent({ ...isDifferent, [name]: currentUser[name] !== value });\r\n    setData({ ...data, [name]: value });\r\n    setErrors({ ...errors, [name]: target.validationMessage })\r\n    setIsValid(target.closest(\".form__container\").checkValidity());\r\n  };\r\n\r\n\r\n  const resetForm = useCallback((emptyData = {}, emptyErrors = {}, newIsValid = false) => {\r\n    setData(formData);\r\n    setErrors(formData);\r\n    setIsValid(newIsValid);\r\n  }, [setData, setErrors, setIsValid, formData])\r\n\r\n  return { data, errors, handleChange, isValid, isDifferent, resetForm };\r\n}\r\n\r\nexport default useFormWithValidation;","import React from 'react';\r\nimport Button from '../Button/Button';\r\nimport Form from '../Form/Form';\r\nimport useFormWithValidation from '../../utils/useFormWithValidation';\r\nimport CurrentUserContext from '../../contexts/CurrentUserContext';\r\nimport { profileFormInputs } from '../../utils/constants';\r\nimport './Profile.css';\r\n\r\nconst Profile = ({ handleEditProfile, isEditProfile, editProfile, editProfileError, handleLogout }) => {\r\n\r\n  const currentUser = React.useContext(CurrentUserContext);\r\n  const profileFormData = {\r\n    email: currentUser.email,\r\n    name: currentUser.name,\r\n  }\r\n\r\n  const { data, errors, handleChange, isValid, isDifferent } =\r\n    useFormWithValidation(profileFormInputs, profileFormData);\r\n\r\n  // Изменено ли хоть одно поле формы редактирования\r\n  const formDiffers = isDifferent.name === true || isDifferent.email === true;\r\n\r\n  // Сабмит формы редактирования профиля\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const { name, email } = data;\r\n    console.log(name, email);\r\n    handleEditProfile(name, email);\r\n  };\r\n\r\n  return (\r\n    <section className=\"profile__container\">\r\n\r\n      { !isEditProfile\r\n        ? (<>\r\n          <h2 className=\"profile__title\">{`Привет, ${currentUser.name}!`}</h2>\r\n          <p className=\"profile__item\">\r\n            Имя\r\n        <span className=\"profile__info\">\r\n              {currentUser.name}\r\n            </span>\r\n          </p>\r\n          <p className=\"profile__item\">\r\n            E-mail\r\n        <span className=\"profile__info\">\r\n              {currentUser.email}\r\n            </span>\r\n          </p>\r\n          <Button buttonText='Редактировать' buttonMod='button_type_edit' onClick={editProfile} />\r\n          <Button buttonText='Выйти из аккаунта' buttonMod='button_type_logout' onClick={handleLogout} />\r\n        </>\r\n        )\r\n        : <Form\r\n          title=\"Редактирование профиля\"\r\n          buttonText=\"Сохранить\"\r\n          onSubmit={handleSubmit}\r\n          disabled={!(formDiffers && isValid)}\r\n          formText=\"Передумали?\"\r\n          redirectText=\"Вернуться\"\r\n          link='/profile'\r\n          onLinkClick={editProfile}\r\n        >\r\n          <>\r\n            <label htmlFor=\"name\" className=\"form__label\">Имя</label>\r\n            <input\r\n              className=\"form__input\"\r\n              id=\"name\"\r\n              name=\"name\"\r\n              type=\"text\"\r\n              placeholder=\"Имя\"\r\n              value={data.name}\r\n              onChange={handleChange}\r\n              minLength=\"2\"\r\n              maxLength=\"30\"\r\n              required\r\n              pattern=\"[a-zA-Z0-9\\sа-яА-Я\\-]{2,30}\"\r\n            />\r\n            <span className={`form__error${errors.name ? ' form__error_active' : ''}`}>{`${errors.name}`}</span>\r\n            <label htmlFor=\"email\" className=\"form__label\">E-mail</label>\r\n            <input\r\n              className=\"form__input\"\r\n              id=\"email\"\r\n              name=\"email\"\r\n              type=\"email\"\r\n              placeholder=\"Email\"\r\n              value={data.email}\r\n              onChange={handleChange}\r\n              minLength=\"2\"\r\n              maxLength=\"30\"\r\n              required\r\n              pattern=\"^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+$\"\r\n            />\r\n            <span className={`form__error${errors.email || editProfileError ? ' form__error_active' : ''}`}>\r\n              {`${data.email ? errors.email : editProfileError}`}\r\n            </span>\r\n          </>\r\n        </Form>\r\n      }\r\n\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Header from '../Header/Header';\r\nimport Profile from '../Profile/Profile';\r\n\r\nconst ProfilePage = ({ handleEditProfile, editProfileError, isEditProfile, editProfile, handleLogout }) => {\r\n  return (\r\n    <>\r\n      <Header />\r\n      <Profile\r\n        handleEditProfile={handleEditProfile}\r\n        editProfileError={editProfileError}\r\n        isEditProfile={isEditProfile}\r\n        editProfile={editProfile}\r\n        handleLogout={handleLogout} />\r\n    </>\r\n  )\r\n\r\n}\r\n\r\nexport default ProfilePage;","import React from 'react';\r\nimport Form from '../Form/Form';\r\nimport useFormWithValidation from '../../utils/useFormWithValidation';\r\nimport { registerFormInputs } from '../../utils/constants';\r\n\r\nconst Register = ({ handleRegister, registerError }) => {\r\n\r\n  const { data, errors, handleChange, isValid, resetForm } = useFormWithValidation(registerFormInputs);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const { name, email, password } = data;\r\n    console.log(name, email, password);\r\n    handleRegister(name, email, password);\r\n    resetForm();\r\n  };\r\n\r\n  return (\r\n    <Form\r\n      title='Добро пожаловать!'\r\n      buttonText='Зарегистрироваться'\r\n      formText='Уже зарегистрированы?'\r\n      redirectText='Войти'\r\n      link='/signin'\r\n      disabled={!isValid}\r\n      onSubmit={handleSubmit}\r\n    >\r\n      <>\r\n        <label htmlFor=\"name\" className=\"form__label\">Имя</label>\r\n        <input\r\n          className=\"form__input\"\r\n          id=\"name\"\r\n          name=\"name\"\r\n          type=\"text\"\r\n          placeholder=\"Имя\"\r\n          value={data.name}\r\n          onChange={handleChange}\r\n          minLength=\"2\"\r\n          maxLength=\"30\"\r\n          required\r\n          pattern=\"[a-zA-Z0-9\\sа-яА-Я\\-]{2,30}\"\r\n        />\r\n        <span className={`form__error${errors.name ? ' form__error_active' : ''}`}>{`${errors.name}`}</span>\r\n        <label htmlFor=\"email\" className=\"form__label\">E-mail</label>\r\n        <input\r\n          className=\"form__input\"\r\n          id=\"email\"\r\n          name=\"email\"\r\n          type=\"email\"\r\n          placeholder=\"Email\"\r\n          pattern=\"^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+$\"\r\n          value={data.email}\r\n          onChange={handleChange}\r\n          minLength=\"2\"\r\n          maxLength=\"30\"\r\n          required\r\n        />\r\n        <span className={`form__error${errors.email ? ' form__error_active' : ''}`}>{`${errors.email}`}</span>\r\n        <label htmlFor=\"password\" className=\"form__label\">Пароль</label>\r\n        <input\r\n          className=\"form__input form__input_type_password\"\r\n          id=\"password\"\r\n          name=\"password\"\r\n          type=\"password\"\r\n          placeholder=\"Пароль\"\r\n          value={data.password}\r\n          onChange={handleChange}\r\n          minLength=\"6\"\r\n          maxLength=\"30\"\r\n          required\r\n        />\r\n        <span className={`form__error${errors.password || registerError ? ' form__error_active' : ''}`}>\r\n          {`${data.password ? errors.password : registerError}`}\r\n        </span>\r\n      </>\r\n    </Form>\r\n  )\r\n}\r\n\r\nexport default Register;","import React from 'react';\r\nimport Header from '../Header/Header';\r\nimport Register from '../Register/Register'\r\n\r\nconst RegisterPage = ({ handleRegister, registerError }) => {\r\n\r\n  return (\r\n    <>\r\n      <Header mod=\"header__container_type_register\" isMenuOn={false} />\r\n      <Register handleRegister={handleRegister} registerError={registerError} />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default RegisterPage;","import React from 'react';\r\nimport Form from '../Form/Form';\r\nimport useFormWithValidation from '../../utils/useFormWithValidation';\r\nimport { loginFormInputs } from '../../utils/constants';\r\n\r\nconst Login = ({ handleLogin, loginError }) => {\r\n\r\n  const { data, errors, handleChange, isValid, resetForm } = useFormWithValidation(loginFormInputs);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const { email, password } = data;\r\n    console.log(email, password);\r\n    handleLogin(email, password);\r\n    resetForm();\r\n  };\r\n\r\n  return (\r\n    <Form\r\n      title='Рады видеть!'\r\n      buttonText='Войти'\r\n      formText='Еще не зарегистрированы?'\r\n      redirectText='Регистрация'\r\n      mod='form__button_type_login'\r\n      link='/signup'\r\n      onSubmit={handleSubmit}\r\n      disabled={!isValid}\r\n    >\r\n      <>\r\n        <label htmlFor=\"email\" className=\"form__label\">E-mail</label>\r\n        <input\r\n          className=\"form__input\"\r\n          id=\"email\"\r\n          name=\"email\"\r\n          type=\"email\"\r\n          placeholder=\"Email\"\r\n          value={data.email}\r\n          onChange={handleChange}\r\n          minLength=\"2\"\r\n          maxLength=\"30\"\r\n          required\r\n          pattern=\"^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+$\"\r\n        />\r\n        <span className={`form__error${errors.email ? ' form__error_active' : ''}`}>{`${errors.email}`}</span>\r\n        <label htmlFor=\"password\" className=\"form__label\">Пароль</label>\r\n        <input\r\n          className=\"form__input form__input_type_password\"\r\n          id=\"password\"\r\n          name=\"password\"\r\n          type=\"password\"\r\n          placeholder=\"Пароль\"\r\n          value={data.password}\r\n          onChange={handleChange}\r\n          minLength=\"6\"\r\n          maxLength=\"30\"\r\n          required\r\n        />\r\n        <span className={`form__error${errors.password || loginError ? ' form__error_active' : ''}`}>\r\n          {`${data.password ? errors.password : loginError}`}\r\n        </span>\r\n      </>\r\n    </Form>\r\n  )\r\n}\r\n\r\nexport default Login;","import React from 'react';\r\nimport Header from '../Header/Header';\r\nimport Login from '../Login/Login';\r\n\r\nconst LoginPage = ({ handleLogin, loginError }) => {\r\n\r\n  return (\r\n    <>\r\n      <Header mod=\"header__container_type_register\" isMenuOn={false} />\r\n      <Login handleLogin={handleLogin} loginError={loginError} />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default LoginPage;","import React from 'react';\r\nimport Button from '../Button/Button';\r\nimport './NotFound.css'\r\n\r\nconst NotFound = ({ goBack }) => {\r\n\r\n  return (\r\n    <section className=\"not-found__container\">\r\n      <h2 className=\"not-found__title\">404</h2>\r\n      <p className=\"not-found__text\">Страница не найдена</p>\r\n      <Button buttonText='Назад' buttonMod='button_type_404' onClick={goBack} />\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default NotFound;","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\nconst ProtectedRoute = ({ component: Component, ...props }) => {\r\n  return (\r\n    <Route>\r\n      {() =>\r\n        props.loggedIn ? <Component {...props} /> : <Redirect to=\"/signin\" />\r\n      }\r\n    </Route>\r\n  );\r\n};\r\n\r\nexport default ProtectedRoute;\r\n","import { MAIN_API_URL } from '../config/index';\r\n\r\nclass MainApi {\r\n  constructor({ url }) {\r\n    this._url = url;\r\n  }\r\n\r\n  // Метод чтения токена и проставления его в заголовок запроса\r\n  setToken(token) {\r\n    this._headers = {\r\n      Authorization: `Bearer ${token}`,\r\n      'Content-Type': 'application/json',\r\n    };\r\n  }\r\n\r\n  // Метод обработки ответа\r\n  _handleResponse(res) { \r\n    return res.json();\r\n  }\r\n\r\n  // Регистрация \r\n  register = (name, email, password) => {\r\n    return fetch(`${this._url}/signup`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({ name, email, password }),\r\n    }).then(this._handleResponse);\r\n  };\r\n\r\n  // Авторизация\r\n  authorize = (email, password) => {\r\n    return fetch(`${this._url}/signin`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({ email, password }),\r\n    }).then(this._handleResponse);\r\n  };\r\n\r\n\r\n  // Получение инфо о пользователе\r\n  getUser() {\r\n    return fetch(`${this._url}/users/me`, {\r\n      method: 'GET',\r\n      headers: this._headers\r\n    },\r\n    )\r\n      .then(this._handleResponse)\r\n  };\r\n\r\n  // Проверка токена\r\n  getContent = (token) => {\r\n    return fetch(`${this._url}/users/me`, {\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    }).then(this._handleResponse);\r\n  };\r\n\r\n  // Обновление данных пользователя\r\n  updateUser(name, email) {\r\n    return fetch(`${this._url}/users/me`, {\r\n      method: 'PATCH',\r\n      headers: this._headers,\r\n      body: JSON.stringify({\r\n        name: name,\r\n        email: email,\r\n      })\r\n    },\r\n    )\r\n      .then(this._handleResponse)\r\n  };\r\n\r\n\r\n  // Сохранение фильма\r\n  addMovie(movie) {\r\n    return fetch(`${this._url}/movies`, {\r\n      method: 'POST',\r\n      headers: this._headers,\r\n      body: JSON.stringify(movie)\r\n    },\r\n    )\r\n      .then(this._handleResponse)\r\n  };\r\n\r\n  // Удаление фильма\r\n  deleteMovie(id) {\r\n    return fetch(`${this._url}/movies/${id}`, {\r\n      method: 'DELETE',\r\n      headers: this._headers,\r\n    },\r\n    )\r\n      .then(this._handleResponse)\r\n  };\r\n\r\n  // Получение сохраненных пользователем фильмов\r\n\r\n  getAllMovies = () => {\r\n    return fetch(`${this._url}/movies`, {\r\n      method: 'GET',\r\n      headers: this._headers,\r\n    }).then(this._handleResponse);\r\n  };\r\n\r\n\r\n\r\n\r\n  // Методы лайков\r\n\r\n  changeLikeStatus(cardId, isLiked) {\r\n    if (isLiked) {\r\n      return fetch(`${this._url}/cards/likes/${cardId}`, {\r\n        method: 'DELETE',\r\n        headers: this._headers\r\n      })\r\n        .then(this._handleResponse)\r\n    }\r\n    else {\r\n      return fetch(`${this._url}/cards/likes/${cardId}`, {\r\n        method: 'PUT',\r\n        headers: this._headers\r\n      })\r\n        .then(this._handleResponse)\r\n    }\r\n  };\r\n}\r\n\r\nconst mainApi = new MainApi({\r\n  url: MAIN_API_URL,\r\n\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n});\r\n\r\nexport default mainApi;\r\n\r\n\r\n\r\n","import React, { useState } from 'react';\r\n\r\nconst getBreakPoint = (windowWidth) => {\r\n  if (windowWidth) {\r\n    if (windowWidth < 480) {\r\n      return 'mobile';\r\n    } else if (windowWidth < 769) {\r\n      return 'tablet';\r\n    }\r\n    else if (windowWidth < 1300) {\r\n      return 'display';\r\n    }\r\n    else return 'largeDisplay'\r\n  }\r\n  else {\r\n    return undefined;\r\n  }\r\n}\r\n\r\nconst useWindowSize = () => {\r\n  const isClient = typeof window === 'object';\r\n  const [windowSize, setWindowSize] = useState(\r\n    isClient ? getBreakPoint(window.innerWidth) : undefined,\r\n  );\r\n\r\n  let timer;\r\n  const resizeThrottler = () => {\r\n    if (!timer) {\r\n      timer = setTimeout(() => {\r\n        timer = null;\r\n        changeWindowSize();\r\n      }, 100);\r\n    }\r\n  }\r\n  const changeWindowSize = () => {\r\n    setWindowSize(getBreakPoint(window.innerWidth));\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    window.addEventListener('resize', resizeThrottler);\r\n    return () => {\r\n      window.removeEventListener('resize', resizeThrottler);\r\n    }\r\n  }, []);\r\n  return windowSize;\r\n}\r\n\r\nexport default useWindowSize;","import { API_URL } from '../config/index'\r\n\r\n// Обработка ответа\r\nconst handleResponse = (res) => {\r\n  return res.json();\r\n}\r\n\r\n// // Обработка ошибки\r\n// const handleResponseError = (err) => {\r\n//   console.log(err);\r\n// }\r\n\r\n\r\nconst getMoviesList = () => {\r\n  return fetch(API_URL, {\r\n    method: 'GET',\r\n  })\r\n    .then(handleResponse);\r\n}\r\n\r\nexport { getMoviesList }","import React, { useState } from 'react';\r\nimport { Route, Switch, useHistory } from 'react-router-dom';\r\nimport './App.css';\r\nimport Main from '../Main/Main';\r\nimport Movies from '../Movies/Movies';\r\nimport SavedMovies from '../SavedMovies/SavedMovies';\r\nimport ProfilePage from '../ProfilePage/ProfilePage';\r\nimport RegisterPage from '../RegisterPage/RegisterPage';\r\nimport LoginPage from '../LoginPage/LoginPage';\r\nimport NotFound from '../NotFound/NotFound';\r\nimport ProtectedRoute from '../ProtectedRoute/ProtectedRoute';\r\nimport mainApi from '../../utils/mainApi';\r\nimport useWindowSize from '../../utils/useWindowSize';\r\nimport CurrentUserContext from '../../contexts/CurrentUserContext';\r\nimport { getMoviesList } from '../../utils/MoviesApi';\r\nimport { imageURL } from '../../config/index';\r\nimport { notFoundMessage, serverErrorMessage } from '../../config/index';\r\n\r\n\r\nfunction App() {\r\n\r\n  // *** Переменные состояния\r\n\r\n  // Ошибки\r\n  const [errorMessages, setErrorMessages] = useState({\r\n    loginError: '',\r\n    registerError: '',\r\n    editProfileError: '',\r\n    saveMovieError: '',\r\n    searchError: '',\r\n  });\r\n\r\n  // Данные пользователя \r\n  const [userData, setUserData] = useState({\r\n    id: '',\r\n    name: '',\r\n    email: '',\r\n  });\r\n  // Статус логина\r\n  const [loggedIn, setLoggedIn] = useState(false);\r\n  // Статус проверен ли токен\r\n  const [permissionsChecked, setPermissionsChecked] = useState(false);\r\n  // Открыта ли форма редактирования профиля\r\n  const [isEditProfile, setEditProfile] = useState(false);\r\n\r\n  // Состояние прелоадера\r\n  const [preloaderOn, setPreloaderOn] = useState(false);\r\n  // Стейт для хранения отображаемых фильмов\r\n  const [filteredMovies, setFilterMovies] = useState([]);\r\n  // Стейт для хранения короткометражек \r\n  const [foundShortMovies, setFoundShortMovies] = useState([]);\r\n  // Стейт переключателя короткометражек\r\n  const [isShortMovies, setIsShortMovies] = useState(false);\r\n\r\n  // Стейт для хранения найденных фильмов\r\n  const [foundMovies, setFoundMovies] = useState([]);\r\n  // Стейт для сохраненных пользователем фильмов\r\n  const [savedMovies, setSavedMovies] = useState([]);\r\n\r\n  // Стейт для сохраненных короткометражек\r\n  const [savedShortMovies, setSavedShortMovies] = useState([]);\r\n\r\n  // Стейт для отображаемых сохраненных фильмов \r\n  const [savedFilteredMovies, setSavedFilteredMovies] = useState([]);\r\n\r\n  // Cтейт для хранения числа фильмов на странице и добавляемых по кнопке еще\r\n  const [numberOfMovies, setNumberOfMovies] = useState(0);\r\n  // Стейт состояния кнопки\r\n  const [isButtonOn, setButtonState] = useState(true);\r\n\r\n  const history = useHistory();\r\n  // Используем хук для ширины экрана\r\n  const width = useWindowSize();\r\n\r\n  // Функция регистрации\r\n  const handleRegister = (name, email, password) => {\r\n    mainApi\r\n      .register(name, email, password)\r\n      .then((res) => {\r\n        if (res.message === 'celebrate request validation failed') {\r\n          setErrorMessages({\r\n            ...errorMessages,\r\n            registerError: `${res.validation.body.message}.`,\r\n          })\r\n          return Promise.reject(\r\n            `Ошибка: ${res.validation.body.message}.`\r\n          );\r\n        }\r\n        else if\r\n          (res.error || res.message) {\r\n          setErrorMessages({\r\n            ...errorMessages,\r\n            registerError: `${res.error ? res.error : res.message}.`,\r\n          })\r\n          return Promise.reject(\r\n            `Ошибка: ${res.error ? res.error : res.message}.`\r\n          );\r\n        }\r\n        else {\r\n          setErrorMessages({\r\n            ...errorMessages,\r\n            registerError: ``,\r\n          })\r\n          setUserData({\r\n            id: res._id,\r\n            name: res.name,\r\n            email: res.email,\r\n          });\r\n          handleLogin(email, password);\r\n        }\r\n      })\r\n      .catch((res) => {\r\n        console.log(res);\r\n        setErrorMessages({\r\n          ...errorMessages,\r\n          registerError: `Что-то пошло не так :(' ${res}`,\r\n        })\r\n      });\r\n  };\r\n\r\n  // Функция авторизации\r\n  const handleLogin = (email, password) => {\r\n    mainApi\r\n      .authorize(email, password)\r\n      .then((res) => {\r\n        if (res.message === 'celebrate request validation failed') {\r\n          setErrorMessages({\r\n            ...errorMessages,\r\n            loginError: `${res.validation.body.message}.`,\r\n          })\r\n          return Promise.reject(\r\n            `Ошибка: ${res.validation.body.message}.`\r\n          );\r\n        }\r\n        else if (res.message) {\r\n          setErrorMessages({\r\n            ...errorMessages,\r\n            loginError: `${res.error ? res.error : res.message}.`,\r\n          })\r\n          return Promise.reject(`Ошибка: ${res.message}`);\r\n        } else {\r\n          localStorage.setItem('jwt', res.token);\r\n          mainApi.setToken(res.token);\r\n          setLoggedIn(true);\r\n          mainApi.getUser()\r\n            .then((res) => {\r\n              setUserData({\r\n                id: res._id,\r\n                name: res.name,\r\n                email: res.email,\r\n              });\r\n            })\r\n          history.push('/movies');\r\n        }\r\n      })\r\n      .catch((res) => {\r\n        console.log(res);\r\n        setErrorMessages({\r\n          ...errorMessages,\r\n          loginError: `Что-то пошло не так :(' ${res}`,\r\n        })\r\n      });\r\n  };\r\n\r\n  // Функция выхода из системы\r\n  const handleLogout = () => {\r\n    localStorage.removeItem('jwt');\r\n    mainApi.setToken('');\r\n    setUserData({\r\n      id: '',\r\n      name: '',\r\n      email: '',\r\n    });\r\n    setLoggedIn(false);\r\n    history.push('/');\r\n  };\r\n\r\n  // // Функция проверки наличия и валидности токена\r\n  const tokenCheck = () => {\r\n    const jwt = localStorage.getItem('jwt');\r\n    if (jwt) {\r\n      mainApi\r\n        .getContent(jwt)\r\n        .then((res) => {\r\n          if (res.message) {\r\n            setLoggedIn(false);\r\n            setUserData({\r\n              id: '',\r\n              name: '',\r\n              email: '',\r\n            });\r\n            return Promise.reject(`Ошибка: ${res.message}`);\r\n          }\r\n          if (res.email) {\r\n            console.log('logged');\r\n            mainApi.setToken(jwt);\r\n            setLoggedIn(true);\r\n            setUserData({\r\n              id: res._id,\r\n              name: res.name,\r\n              email: res.email,\r\n            })\r\n          }\r\n        })\r\n        .catch((res) => {\r\n          return Promise.reject(`Ошибка: ${res.message}`);\r\n        })\r\n        .finally(() => {\r\n          console.log('jwt checked!');\r\n          setPermissionsChecked(true);\r\n        });\r\n    }\r\n    else {\r\n      setPermissionsChecked(true);\r\n    }\r\n  };\r\n\r\n  // Функция открытия формы редактирования профиля\r\n  const editProfile = () => {\r\n    setEditProfile(isEditProfile ? false : true);\r\n  }\r\n\r\n  // Функция редактирования профиля\r\n  const handleEditProfile = (name, email) => {\r\n    mainApi\r\n      .updateUser(name, email)\r\n      .then((res) => {\r\n        if (res.message === 'celebrate request validation failed') {\r\n          setErrorMessages({\r\n            ...errorMessages,\r\n            editProfileError: `${res.validation.body.message}.`,\r\n          })\r\n          return Promise.reject(\r\n            `Ошибка: ${res.validation.body.message}.`\r\n          );\r\n        }\r\n        else if (res.error || res.message) {\r\n          setErrorMessages({\r\n            ...errorMessages,\r\n            editProfileError: `${res.error ? res.error : res.message}.`,\r\n          })\r\n          return Promise.reject(\r\n            `Ошибка: ${res.error ? res.error : res.message}.`\r\n          );\r\n        }\r\n        else {\r\n          setErrorMessages({\r\n            ...errorMessages,\r\n            editProfileError: '',\r\n          })\r\n          setUserData({\r\n            ...userData,\r\n            name: res.name,\r\n            email: res.email,\r\n          });\r\n          editProfile();\r\n        }\r\n      })\r\n      .catch((res) => {\r\n        setErrorMessages({\r\n          ...errorMessages,\r\n          editProfileError: `Что-то пошло не так :(' ${res}`,\r\n        })\r\n      })\r\n  }\r\n\r\n  // Функция сохранения фильма\r\n  const handleSaveMovie = (movie) => {\r\n    const savedMovie = {\r\n      country: movie.country || 'none',\r\n      director: movie.director || 'none',\r\n      duration: movie.duration,\r\n      year: movie.year,\r\n      description: movie.description || 'none',\r\n      nameRU: movie.nameRU,\r\n      nameEN: movie.nameEN,\r\n      image: `${imageURL}${movie.image.url}` || 'https://www.youtube.com/',\r\n      trailer: movie.trailerLink || 'https://www.youtube.com',\r\n      thumbnail: `${imageURL}${movie.image.formats.thumbnail.url}` || 'https://www.youtube.com/',\r\n      movieId: movie.id,\r\n    }\r\n    console.log(savedMovie);\r\n    mainApi\r\n      .addMovie(savedMovie)\r\n      .then((res) => {\r\n        if (res.message === 'celebrate request validation failed') {\r\n          setErrorMessages({\r\n            ...errorMessages,\r\n            saveMovieError: `${res.validation.body.message}.`,\r\n          })\r\n          return Promise.reject(\r\n            `Ошибка: ${res.validation.body.message}.`\r\n          );\r\n        }\r\n        else if (res.error || res.message) {\r\n          setErrorMessages({\r\n            ...errorMessages,\r\n            saveMovieError: `${res.error ? res.error : res.message}.`,\r\n          })\r\n          return Promise.reject(\r\n            `Ошибка: ${res.error ? res.error : res.message}.`\r\n          );\r\n        }\r\n        else {\r\n          setErrorMessages({\r\n            ...errorMessages,\r\n            saveMovieError: '',\r\n          })\r\n          console.log(`saved ${res.nameRU}`);\r\n          getMovies();\r\n        }\r\n      })\r\n      .catch((res) => {\r\n        setErrorMessages({\r\n          ...errorMessages,\r\n          saveMovieError: `Что-то пошло не так :(' ${res}`,\r\n        })\r\n      })\r\n  }\r\n\r\n  // Функция удаления фильма\r\n\r\n  const handleDeleteMovie = (movieId) => {\r\n    mainApi\r\n      .deleteMovie(movieId)\r\n      .then((res) => {\r\n        console.log(res);\r\n        getMovies();\r\n      })\r\n      .catch((err) => console.log(err))\r\n  }\r\n\r\n  // Поиск фильмов в массиве по ключевому слову\r\n\r\n  const filterMovies = (movies, searchText) => {\r\n    setErrorMessages({\r\n      ...errorMessages,\r\n      searchError: '',\r\n    });\r\n    const foundMovies = movies.filter((movie) => {\r\n      const nameRu = movie.nameRU || '';\r\n      const nameEn = movie.nameEN || '';\r\n      return (nameRu.toLowerCase().includes(searchText) || nameEn.toLowerCase().includes(searchText));\r\n    });\r\n    const foundShortMovies = foundMovies.filter((movie) => {\r\n      return movie.duration <= 40;\r\n    });\r\n    if (foundMovies.length === 0) {\r\n      setErrorMessages({\r\n        ...errorMessages,\r\n        searchError: notFoundMessage,\r\n      });\r\n    }\r\n    setPreloaderOn(false);\r\n    checkButton(foundMovies, numberOfMovies);\r\n    setFoundMovies(foundMovies);\r\n    setFoundShortMovies(foundShortMovies);\r\n    setFilterMovies(foundMovies.slice(0, numberOfMovies));\r\n    localStorage.setItem('moviesList', JSON.stringify(foundMovies))\r\n  }\r\n\r\n  // Поиск фильмов в сохраненных фильмах\r\n\r\n  const filterSavedMovies = (movies, searchText) => {\r\n    setErrorMessages({\r\n      ...errorMessages,\r\n      searchError: '',\r\n    });\r\n    const foundMovies = movies.filter((movie) => {\r\n      const nameRu = movie.nameRU || '';\r\n      const nameEn = movie.nameEN || '';\r\n      return (nameRu.toLowerCase().includes(searchText) || nameEn.toLowerCase().includes(searchText));\r\n    });\r\n    const foundShortMovies = foundMovies.filter((movie) => {\r\n      return movie.duration <= 40;\r\n    });\r\n    if (foundMovies.length === 0) {\r\n      setErrorMessages({\r\n        ...errorMessages,\r\n        searchError: notFoundMessage,\r\n      });\r\n    }\r\n    setSavedMovies(foundMovies);\r\n    setSavedFilteredMovies(foundMovies);\r\n    setSavedShortMovies(foundShortMovies);\r\n  }\r\n  // Функция поиска фильмов\r\n  const searchMovies = (searchText) => {\r\n\r\n    // Проверка нужно ли идти в API за списком фильмов\r\n    const fullMoviesList = JSON.parse(localStorage.getItem('fullMoviesList'));\r\n\r\n    if (fullMoviesList) {\r\n      console.log('не ходил в API')\r\n      filterMovies(fullMoviesList, searchText);\r\n    }\r\n    else {\r\n      setPreloaderOn(true);\r\n      getMoviesList()\r\n        .then((res) => {\r\n          console.log('сходил в API');\r\n          localStorage.setItem('fullMoviesList', JSON.stringify(res));\r\n          filterMovies(res, searchText);\r\n        })\r\n        .catch((err) => {\r\n          setErrorMessages({\r\n            ...errorMessages,\r\n            searchError: serverErrorMessage,\r\n          });\r\n          setPreloaderOn(false);\r\n        })\r\n    }\r\n\r\n  }\r\n\r\n  // Функция первой загрузки карточек\r\n  const renderCardsOnFirstLoad = (number) => {\r\n    if (localStorage.getItem('moviesList')) {\r\n      const movies = (JSON.parse(localStorage.getItem('moviesList')));\r\n      // console.log(movies.length);\r\n      // console.log(movies.slice(0, number).length);\r\n      checkButton(movies, number);\r\n      const foundShortMovies = movies.filter((movie) => {\r\n        return movie.duration <= 40;\r\n      });\r\n      setFoundShortMovies(foundShortMovies);\r\n      setFoundMovies(movies);\r\n      // console.log(`render ${number} cards`);\r\n      setFilterMovies(movies.slice(0, number));\r\n    }\r\n  }\r\n\r\n  // Функция подгрузки карточек при нажатии Еще\r\n  const loadCards = () => {\r\n    const addCards = (number) => {\r\n      const showMovies = numberOfMovies + number;\r\n      setNumberOfMovies(showMovies)\r\n      // console.log(showMovies);\r\n      checkButton(foundMovies, showMovies);\r\n      setFilterMovies(foundMovies.slice(0, showMovies));\r\n    }\r\n\r\n    if (width === 'display' || width === 'largeDisplay') {\r\n      const addMovies = 3;\r\n      // console.log(addMovies);\r\n      addCards(addMovies);\r\n    }\r\n    else {\r\n      const addMovies = 2;\r\n      // console.log(addMovies);\r\n      addCards(addMovies);\r\n    }\r\n  }\r\n\r\n  // Функция загрузки сохраненных фильмов\r\n\r\n  const getMovies = () => {\r\n    console.log('get movies');\r\n    mainApi\r\n      .getAllMovies()\r\n      .then((res) => {\r\n        const savedShortMovies = res.filter((movie) => {\r\n          return movie.duration <= 40;\r\n        });\r\n        setSavedMovies(res);\r\n        setSavedFilteredMovies(res);\r\n        setSavedShortMovies(savedShortMovies);\r\n      })\r\n      .catch((err) => console.log(err))\r\n  }\r\n\r\n  //  Функция состояния кнопки еще\r\n  const checkButton = (result, sliceNumber) => {\r\n    if (result.length <= result.slice(0, sliceNumber).length) {\r\n      setButtonState(false);\r\n    }\r\n    else if (!isButtonOn) {\r\n      setButtonState(true);\r\n    }\r\n  }\r\n\r\n  // Функция кнопки короткометражек в фильмах\r\n\r\n  const shortMoviesSwitch = () => {\r\n    if (!isShortMovies) {\r\n      setIsShortMovies(true);\r\n      checkButton(foundShortMovies, numberOfMovies);\r\n      setFilterMovies(foundShortMovies.slice(0, numberOfMovies));\r\n    }\r\n    else {\r\n      setIsShortMovies(false);\r\n      checkButton(foundMovies, numberOfMovies);\r\n      setFilterMovies(foundMovies.slice(0, numberOfMovies));\r\n    }\r\n  }\r\n  // Функция кнопки короткометражек в сохраненных фильмах\r\n\r\n  const shortSavedMoviesSwitch = () => {\r\n    if (!isShortMovies) {\r\n      setIsShortMovies(true);\r\n      setSavedFilteredMovies(savedShortMovies);\r\n    }\r\n    else {\r\n      setIsShortMovies(false);\r\n      setSavedFilteredMovies(savedMovies);\r\n    }\r\n  }\r\n\r\n  // Очистка стейта короткометражек при переходе на другую страницу\r\n\r\n  const shortMoviesOff = () => {\r\n    setIsShortMovies(false);\r\n    setFilterMovies(foundMovies.slice(0, numberOfMovies));\r\n  }\r\n\r\n  // Функция перехода на предыдущую страницу\r\n\r\n  const goBack = () => {\r\n    history.goBack();\r\n  }\r\n\r\n  // Проверка токена при загрузке страницы\r\n  React.useEffect(() => {\r\n    tokenCheck();\r\n    setErrorMessages({\r\n      loginError: '',\r\n      registerError: '',\r\n      editProfileError: '',\r\n      searchError: '',\r\n    })\r\n  }, []);\r\n\r\n  // Проверка сколько карточек отрисовывать в фильмах\r\n\r\n  React.useEffect(() => {\r\n    if (width === 'display' || width === 'largeDisplay') {\r\n      setNumberOfMovies(12)\r\n      renderCardsOnFirstLoad(12);\r\n    }\r\n    else if (width === 'tablet') {\r\n      setNumberOfMovies(8)\r\n      renderCardsOnFirstLoad(8);\r\n    }\r\n    else if (width === 'mobile') {\r\n      setNumberOfMovies(5)\r\n      renderCardsOnFirstLoad(5);\r\n    }\r\n  }, []);\r\n\r\n  if (!permissionsChecked) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <CurrentUserContext.Provider value={userData}>\r\n      <div className=\"app\">\r\n        <Switch >\r\n          <Route exact path=\"/\">\r\n            <Main loggedIn={loggedIn} />\r\n          </Route>\r\n          <ProtectedRoute\r\n            exact path=\"/movies\"\r\n            loggedIn={loggedIn}\r\n            component={Movies}\r\n            handleSaveMovie={handleSaveMovie}\r\n            handleDeleteMovie={handleDeleteMovie}\r\n            searchMovies={searchMovies}\r\n            isPreloaderOn={preloaderOn}\r\n            errorText={errorMessages.searchError}\r\n            filteredMovies={filteredMovies}\r\n            loadCards={loadCards}\r\n            isButtonOn={isButtonOn}\r\n            getMovies={getMovies}\r\n            savedMovies={savedMovies}\r\n            shortMoviesSwitch={shortMoviesSwitch}\r\n            isShortMovies={isShortMovies}\r\n            shortMoviesOff={shortMoviesOff} />\r\n          <ProtectedRoute\r\n            exact path=\"/saved-movies\"\r\n            loggedIn={loggedIn}\r\n            component={SavedMovies}\r\n            savedMovies={savedFilteredMovies}\r\n            userMovies={savedMovies}\r\n            getMovies={getMovies}\r\n            filterSavedMovies={filterSavedMovies}\r\n            shortMoviesSwitch={shortSavedMoviesSwitch}\r\n            isShortMovies={isShortMovies}\r\n            shortMoviesOff={shortMoviesOff}\r\n            handleDeleteMovie={handleDeleteMovie}\r\n            errorText={errorMessages.searchError} />\r\n          <ProtectedRoute\r\n            exact path=\"/profile\"\r\n            loggedIn={loggedIn}\r\n            component={ProfilePage}\r\n            handleEditProfile={handleEditProfile}\r\n            editProfileError={errorMessages.editProfileError || ''}\r\n            editProfile={editProfile}\r\n            isEditProfile={isEditProfile}\r\n            handleLogout={handleLogout} />\r\n          <Route exact path=\"/signup\">\r\n            <RegisterPage\r\n              handleRegister={handleRegister}\r\n              registerError={errorMessages.registerError || ''}\r\n            />\r\n          </Route>\r\n          <Route exact path=\"/signin\">\r\n            <LoginPage handleLogin={handleLogin} loginError={errorMessages.loginError || ''} />\r\n          </Route>\r\n          <Route path=\"*\">\r\n            <NotFound goBack={goBack} />\r\n          </Route>\r\n        </Switch>\r\n      </div>\r\n    </CurrentUserContext.Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App/App';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n      <App />\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}